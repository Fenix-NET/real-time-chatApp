
services:
  chatappapi:
    container_name: chatappapi
    build:
      context: .
      dockerfile: server/src/ChatApp.Api/Dockerfile
    ports:
      - 5156:8080
      - 5157:8081
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__ChatAppDatabase=Host=chatappdb;Database=ChatAppDb;Port=5432;Username=postgres;Password=postgres
    depends_on:
      chatappdb:
        condition: service_healthy
    networks:
      - chatapp-network
  
  chatappdb:
    image: postgres
    container_name: chatappdb
    restart: always
    environment:
      - POSTGRES_DB=ChatAppDb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - chatapp-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pgdata:

networks:
  chatapp-network:
    driver: bridge
